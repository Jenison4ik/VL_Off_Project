version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: next_frontend
    environment:
      - NODE_ENV=production
    expose:
      - "3000"
    networks:
      - app_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    working_dir: /app/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./backend:/app
    networks:
      - app_network
    restart: unless-stopped
    depends_on:
      - redis

  redis:
    image: redis:8-alpine
    ports:
      - "6379:6379"
    container_name: redis
    networks:
      - app_network
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_DOMAIN=jenison.ru
    volumes:
      - ./nginx/certs/conf:/etc/letsencrypt
      - ./nginx/certs/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - app_network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs/conf:/etc/letsencrypt
      - ./nginx/certs/www:/var/www/certbot
    entrypoint: >
      /bin/sh -c "trap exit TERM; while :; do
        certbot renew --webroot -w /var/www/certbot;
        sleep 12h;
      done"
    depends_on:
      - nginx
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
