# ============================
# üîß –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Nginx
# ============================
user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

# ============================
# üåç HTTP-–±–ª–æ–∫
# ============================
http {
    access_log /var/log/nginx/access.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ============================
    # üí® GZIP-—Å–∂–∞—Ç–∏–µ
    # ============================
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml
        image/png
        image/jpeg
        image/webp;

    # ============================
    # üåê HTTP ‚Üí HTTPS —Ä–µ–¥–∏—Ä–µ–∫—Ç
    # ============================
    server {
        listen 80;
        server_name _;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ============================
    # üîí HTTPS —Å–µ—Ä–≤–µ—Ä
    # ============================
    server {
        listen 443 ssl http2 default_server;
        server_name _;

        ssl_certificate /etc/letsencrypt/live/$NGINX_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$NGINX_DOMAIN/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";

        # === API ‚Üí FastAPI backend ===
        location /api/ {
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # === –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Üí Next.js frontend ===
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /robots.txt {
            root /app/server_app/static;
            try_files /robots.txt =404;
            allow all;
            log_not_found off;
            access_log off;
        }
    }
}
