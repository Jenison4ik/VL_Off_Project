version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: next_frontend
    environment:
      - NODE_ENV=production
    expose:
      - "3000" # –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ç–∏ Docker
    networks:
      - app_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_backend
    ports:
      - "8000:8000" # —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω —Å localhost
    environment:
      - PYTHONUNBUFFERED=1
    working_dir: /app/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - app_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
    depends_on:
      - redis

  redis:
    image: redis:8-alpine
    ports:
      - "6379:6379"
    container_name: redis
    networks:
      - app_network
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_DOMAIN=jenison.ru
    volumes:
      - ./nginx/certs/conf:/etc/letsencrypt # –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Let's Encrypt
      - ./nginx/certs/www:/var/www/certbot # –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–∞
    depends_on:
      - frontend
      - backend
    networks:
      - app_network
    restart: unless-stopped
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs/conf:/etc/letsencrypt
      - ./nginx/certs/www:/var/www/certbot
    entrypoint: >
      /bin/sh -c "trap exit TERM; while :; do
        certbot renew --webroot -w /var/www/certbot;
        docker exec nginx_proxy nginx -s reload;
        sleep 12h;
      done"
    depends_on:
      - nginx
    networks:
      - app_network

# üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–µ—Ç—å
networks:
  app_network:
    driver: bridge
